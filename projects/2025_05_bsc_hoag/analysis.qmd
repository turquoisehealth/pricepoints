---
title: "BSC Hoag 2025"
subtitle: "By Dan Snow"
format:
  html:
    fig-format: retina
    fig-dpi: 320
    toc: false
    embed-resources: true
    grid:
      body-width: 900px
execute:
  echo: false
---

```{r setup, message=FALSE}
library(arrow)
library(conflicted)
library(data.table)
library(dplyr)
library(emojifont)
library(forcats)
library(ggplot2)
library(ggrepel)
library(ggridges)
library(ggtext)
library(Hmisc)
library(patchwork)
library(scales)
library(sf)
library(stringr)
library(tigris)
library(tidyr)

# Always use dplyr over other packages
conflict_prefer_all("dplyr", quiet = TRUE)

# Necessary for fast/accurate map rendering
sf_use_s2(FALSE)
options(tigris_use_cache = TRUE)
```

```{r load_data, message=FALSE, warning=FALSE}
# Load the cleaned up rates data from CLD
rates_df <- read_parquet("data/rates_clean.parquet") |>
  mutate(
    med_rate_all = median(canonical_rate),
    .by = c("billing_code", "billing_code_type")
  )

# Transform numbers into dollar amounts, but don't truncate small values e.g.
# 100 becomes $100, 1000 becomes $1K, 1000000 becomes $1M, etc.
label_dollar_short <- function(x) {
  sapply(x, function(val) {
    if (is.na(val)) {
      return(NA_character_)
    }

    abs_val <- abs(val)
    sign_str <- ifelse(val < 0, "-", "")
    if (abs_val >= 1e9) {
      paste0(sign_str, "$", round(abs_val / 1e9, 0), "B")
    } else if (abs_val >= 1e6) {
      paste0(sign_str, "$", round(abs_val / 1e6, 0), "M")
    } else if (abs_val >= 1e3) {
      paste0(sign_str, "$", round(abs_val / 1e3, 1), "K")
    } else {
      paste0(sign_str, "$", formatC(abs_val, format = "f", digits = 0))
    }
  }, USE.NAMES = FALSE)
}

# Human-readable labels for billing codes
code_desc_df <- tribble(
  ~"billing_code", ~"code_desc",
  "788", "C-section no MCC",
  "807", "Vag delivery no MCC",
  "871", "Sepsis w MCC",
  "27130", "Hip/knee replacement",
  "45378", "Colonoscopy",
  "93005", "ECG",
  "93452", "Card cath",
  "42820", "Tonsils removal",
  "47562", "Gall bladder removal",
  "99213", "Est. patient visit"
)
```

```{r provider_comp, message=FALSE}
#| column: page
#| out-width: 100%
#| fig-width: 10
#| fig-height: 9

provider_comp_df <- rates_df %>%
  filter(
    payer_name == "Blue Shield of California",
    provider_name %in% c(
      "Hoag Memorial Hospital",
      "University of California Irvine Medical Center",
      "Long Beach Memorial Medical Center",
      "Orange Coast Memorial Medical Center",
      "Saddleback Memorial Medical Center",
      "Earl & Lorraine Miller Childrens Hospital",
      "St Joseph Hospital - Orange",
      "St Jude Medical Center",
      "Huntington Beach Hospital"
    )
  ) |>
  left_join(code_desc_df, by = "billing_code") |>
  mutate(
    code = factor(paste0(
      "**", billing_code_type, " ",
      billing_code, "**<br><sup>", code_desc, "</sup>"
    )),
    code = fct_rev(fct_reorder(code, med_rate_all)),
    rate_label = case_when(
      str_detect(tolower(health_system_name), "hoag") ~ "Hoag",
      .default = "Other"
    )
  ) |>
  group_by(code) |>
  mutate(rank = dense_rank(canonical_rate * -1)) |>
  ungroup() |>
  mutate(rel_rank = median(rank), .by = "provider_name") |>
  mutate(
    provider_name = fct_rev(fct_reorder(provider_name, rel_rank)),
    rank = factor(rank),
    rank = fct_recode(
      rank,
      "1 (Highest price)" = "1",
      "7 (Lowest price)" = "7"
    ),
    provider_name = fct_recode(
      provider_name,
      # nolint start
      "<span style='color:#e59c35;font-size:15px;'>Hoag Hospital<br>Newport Beach</span><br>★★★★★" = "Hoag Memorial Hospital",
      "UC Irvine<br>Medical Center<br>★★★★☆" = "University of California Irvine Medical Center",
      "Long Beach<br>Memorial<br>Medical Center<br>★★☆☆☆" = "Long Beach Memorial Medical Center",
      "Orange Coast<br>Memorial<br>Medical Center<br>★★★★☆" = "Orange Coast Memorial Medical Center",
      "Saddleback<br>Memorial<br>Medical Center<br>★★★☆☆" = "Saddleback Memorial Medical Center",
      "St Joseph<br>Hospital<br>(Orange)<br>★★★★☆" = "St Joseph Hospital - Orange",
      "St Jude<br>Medical Center<br>★★★★☆" = "St Jude Medical Center"
      # nolint end
    )
  )

provider_comp_df |>
  ggplot() +
  geom_tile(
    aes(x = provider_name, y = code, fill = rank)
  ) +
  geom_text(
    aes(
      x = provider_name,
      y = code,
      label = label_dollar_short(canonical_rate),
      color = rank
    ),
    size = 4
  ) +
  annotate(
    "rect",
    xmin = 5.5, xmax = 6.5,
    ymin = -Inf, ymax = Inf,
    fill = "transparent",
    color = "#e59c35",
    linewidth = 1.8
  ) +
  scale_color_manual(
    values = c(
      "1 (Highest price)" = "white",
      "2" = "white",
      "3" = "white",
      "4" = "black",
      "5" = "black",
      "6" = "grey10",
      "7 (Lowest price)" = "grey10"
    )
  ) +
  scale_fill_brewer(
    name = "Price rank per procedure",
    palette = "BuPu",
    direction = -1
  ) +
  scale_x_discrete(expand = c(0, 0), position = "top") +
  scale_y_discrete(expand = c(0, 0)) +
  labs(
    title = paste0(
      "<span style='color:#e59c35'>Hoag</span> gets higher rates from",
      " Blue Shield than other providers in Orange County"
    ),
    subtitle = paste0(
      "Across a basket of common procedures, Hoag",
      " prices are consistently higher than those of competitors"
    ),
    y = "Procedure",
    x = "",
    caption = paste0(
      "Stars represent CMS quality ratings for each hospital<br>",
      "Based on ", nrow(provider_comp_df),
      " rates negotitated between providers and Blue Shield of California"
    )
  ) +
  guides(
    fill = guide_legend(
      position = "bottom",
      title.hjust = 0.5,
      label.position = "bottom",
      nrow = 1,
      reverse = TRUE
    ),
    color = "none"
  ) +
  theme(
    plot.title = element_markdown(
      size = 18,
      margin = margin(b = 6, l = -100),
      face = "bold"
    ),
    plot.subtitle = element_markdown(
      size = 14,
      margin = margin(b = 20, l = -100),
      lineheight = 1.2
    ),
    panel.grid = element_blank(),
    legend.title = element_text(
      margin = margin(r = 14),
      size = 15,
      face = "bold",
      color = "grey30"
    ),
    legend.text = element_text(size = 13),
    legend.key.spacing.y = unit(0.2, "cm"),
    plot.margin = margin(r = 16, t = 6, b = 6, l = 6),
    axis.title.x = element_markdown(
      margin = margin(t = 10),
      size = 20,
      face = "bold",
      color = "grey60",
      linewidth = 1.2
    ),
    axis.text.x = element_markdown(size = 10, lineheight = 1.2, face = "bold"),
    axis.ticks.y = element_blank(),
    axis.ticks.x = element_blank(),
    axis.title.y = element_markdown(
      size = 20,
      color = "grey60",
      margin = margin(r = 10),
      face = "bold"
    ),
    axis.text.y = element_markdown(size = 11, lineheight = 1.3),
    panel.background = element_rect(fill = "grey90"),
    strip.text = element_markdown(size = 10),
    plot.caption = element_markdown(
      size = 10,
      lineheight = 1.1,
      margin = margin(t = 16, r = -2)
    )
  )
```
